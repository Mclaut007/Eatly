// Миксины и функции

// Функция возвращает размер шрифта в rem (переводит из пикселей в rem). По умолчанию в браузерах это 16px. В стилях для конкретного текста можно писать font-size: rem(32). Это пример. Тогда в файле css окажется 2rem. 16px - это размер по умолчанию в браузерах. $pxSize пишем без 'px'.

@function rem($pxSize) {
	$remSize: calc($pxSize / 16 * 1rem);
	@return $remSize;
}

// Функция ниже возвращает формулу, по которой рассчитывается адаптивное свойство. Но в пикселях. Нужно сделать в ремах. Параметры у функции - это минимальное и максимальное значения свойства. Первые два атрибута указываются без пикселей, а вторые два (если они вдруг нужны) с пикселями.

@function proad($min, $max, $minWidth, $maxWidth) {
	@return clamp(
		rem($min),
		calc($min * 1px + ($max - $min) * ((100vw - $minWidth) / (($maxWidth - $minWidth) / (1px)))),
		rem($max)
	);
}

// ========= Адаптивное свойство в ремах ======== //

// $min и $max - минимальное и максимальное значение свойства (например, размера шрифта) в пикселях, но пиксели не пишутся. В функции они будут переведены в ремы.
// $minWidthRemWithout и $maxWidthRemWithout - это максимальная и минимальная ширины экрана, в пределах которых изменяется адаптивное свойство. На минимальной ширине свойство будет равно $min, на максимальной - $max. Сюда помещаем переменные, в которых значения брейкпойнтов в ремах, но без указания ремов.

@function proadrem($min, $max, $minWidthRemWithout, $maxWidthRemWithout) {
	@return clamp(
		rem($min),
		calc(rem($min) + (($max - $min) / 16) * ((100vw - $minWidthRemWithout * 1rem) / ($maxWidthRemWithout - $minWidthRemWithout))),
		rem($max)
	);
}
